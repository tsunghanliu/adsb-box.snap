name: adsb-box
#version: set-by-adopt-info
summary: ADS-B tools
description: |
  This snap includes several ADS-B related tools to let users builds their
  own ADS-B receiver station. There are dump1090 and lighttpd in this snap.

grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict
base: core20
adopt-info: common

apps:
  dump1090:
    command: bin/dump1090
    daemon: simple
    plugs: [network, network-bind, raw-usb, process-control, hardware-observe]
  lighttpd:
    command: bin/lighttpd
    daemon: simple
    plugs: [network, network-bind]
  piaware:
    command: bin/piaware
    daemon: simple
    plugs: [network, network-bind, system-observe, network-observe, mount-observe, hardware-observe]
    after: [dump1090]
  piaware-config:
    command: bin/piaware-config
  piaware-status:
    command: bin/piaware-status
    plugs: [network, system-observe, network-observe]
  fr24feed:
    command: bin/fr24feed
    daemon: simple
    plugs: [network, network-bind, network-observe]
    after: [dump1090]
  fr24feedcli:
    command: bin/fr24feedcli
    plugs: [network, network-bind, network-observe]
  fr24feed-status:
    command: bin/fr24feed-status
  openskyd:
    command: bin/openskyd
    daemon: simple
    plugs: [network, network-bind]
    after: [dump1090]
  pfclient:
    command: bin/pfclientd
    daemon: simple
    plugs: [network, network-bind]
    after: [dump1090]
  rtltest:
    command: usr/bin/rtl_test
    plugs: [network, network-bind, raw-usb, hardware-observe]
  collectd:
    command: bin/collectd
    daemon: simple
    plugs: [network, system-observe, network-observe, mount-observe, hardware-observe]
  graphs1090:
    command: bin/graphs1090
    daemon: simple
    plugs: [process-control]
    after: [dump1090, collectd, lighttpd]
  adsbexchange-netcat:
    command: bin/adsbexchange-netcat
    daemon: simple
    plugs: [network, network-bind, network-observe]
    after: [dump1090]
  adsbexchange-mlat:
    command: bin/adsbexchange-mlat
    daemon: simple
    plugs: [network, network-bind, network-observe]
    after: [dump1090]
  rbfeeder:
    command: bin/rbfeeder
    daemon: simple
    plugs: [network, network-bind, network-observe, hardware-observe]
  rbfeeder-mlat:
    command: bin/rbfeeder-mlat
    daemon: simple
    plugs: [network, network-bind, network-observe]
  rbfeedercli:
    command: bin/rbfeedercli
  generate-wisdom:
    command: bin/generate-wisdom
  dump978:
    command: bin/dump978
    #daemon: simple
    plugs: [network, network-bind, network-observe, raw-usb]
    #after: [dump1090]
  skyaware978:
    command: bin/skyaware978
    #daemon: simple
    plugs: [network, network-bind, network-observe]
    #after: [dump978]

parts:
  common:
    plugin: dump
    source: .
    override-pull: |
      snapcraftctl pull
      snapcraftctl set-version "$(git describe --tags --always --dirty)"
    organize:
      www: var/www
    prime:
      - bin
      - etc
      - var
      - README.md

  dump1090:
    plugin: make
    make-parameters: ['BLADERF=no', 'dump1090', 'faup1090', 'starch-benchmark']
    source: https://github.com/flightaware/dump1090.git
    source-type: git
    # the branch should be the same with piaware
    source-branch: v5.0
    override-build: |
      echo 'patching dump1090 ...'
      if [ -n "$SNAPCRAFT_PROJECT_DIR" ]; then
        PATCHES_DIR="$SNAPCRAFT_PROJECT_DIR/patches"
      else
        PATCHES_DIR="../../../patches"
      fi
      patch -p1 < "$PATCHES_DIR/dump1090.patch"
      cp "$PATCHES_DIR/dump1090/Taiwan.png" public_html_merged/flags-tiny/
      DUMP1090_VERSION=$(head -n 1 debian/changelog | sed 's/.*(\(.*\)).*/\1/')
      sed -i "1i DUMP1090_VERSION ?= $DUMP1090_VERSION" Makefile
      echo 'building dump1090 ...'
      make -j$(nproc) BLADERF=no dump1090 faup1090 starch-benchmark
      echo 'installing dump1090 ...'
      cp -a dump1090 faup1090 starch-benchmark debian/generate-wisdom public_html_merged COPYING $SNAPCRAFT_PART_INSTALL
    organize:
      dump1090: usr/bin/dump1090-fa
      faup1090: usr/lib/piaware/helpers/faup1090
      starch-benchmark: usr/bin/starch-benchmark
      generate-wisdom: bin/generate-wisdom
      public_html_merged: usr/share/dump1090-fa/html
      COPYING: usr/share/dump1090-fa/COPYING
    build-packages:
      - pkg-config
      - libusb-1.0-0-dev
      - librtlsdr-dev
      - libncurses5-dev
    stage-packages:
      - librtlsdr0
      - libusb-1.0-0

  lighttpd:
    plugin: nil
    stage-packages:
      - lighttpd
      - libgamin0

  tcllauncher:
    plugin: autotools
    source: https://github.com/flightaware/tcllauncher.git
    source-type: git
    override-build: |
      if [ -n "$SNAPCRAFT_PROJECT_DIR" ]; then
        PATCHES_DIR="$SNAPCRAFT_PROJECT_DIR/patches"
      else
        PATCHES_DIR="../../../patches"
      fi
      echo 'patching tcllauncher ...'
      patch -p1 < "$PATCHES_DIR/tcllauncher.patch"
      snapcraftctl build
    autotools-configure-parameters: ['--with-tcl=/usr/lib/tcl8.6']
    build-packages:
      - tcl8.6-dev
    stage-packages:
      - libtcl8.6

  piaware:
    after: [tcllauncher]
    plugin: make
    source: https://github.com/flightaware/piaware.git
    source-type: git
    # the branch should be the same with dump1090-fa
    source-branch: v5.0
    override-build: |
      echo 'patching piaware ...'
      if [ -n "$SNAPCRAFT_PROJECT_DIR" ]; then
        PATCHES_DIR="$SNAPCRAFT_PROJECT_DIR/patches"
      else
        PATCHES_DIR="../../../patches"
      fi
      patch -p1 < "$PATCHES_DIR/piaware.patch"
      snapcraftctl build
      echo 'patching pkgIndex.tcl files ...'
      sed -i 's/\/usr/\$\:\:env\(SNAP\)\/usr/g' \
        $SNAPCRAFT_PART_INSTALL/usr/lib/tcltk/$SNAPCRAFT_ARCH_TRIPLET/itcl3.4/pkgIndex.tcl \
        $SNAPCRAFT_PART_INSTALL/usr/lib/tclx8.4/pkgIndex.tcl \
        $SNAPCRAFT_PART_INSTALL/usr/lib/tcltk/$SNAPCRAFT_ARCH_TRIPLET/tcltls1.7.20/pkgIndex.tcl \
        || \
        exit 1
    stage-packages:
      - tclx8.4
      - tcl8.6
      - tcllib
      - tcl-tls
      - itcl3
    prime:
      - -usr/share/doc
      - -usr/share/man

  mlat-client:
    plugin: python
    python-packages: [python-prctl]
    source: https://github.com/mutability/mlat-client.git
    source-type: git
    build-packages:
      - libcap-dev # for python-prctl
    override-build: |
      echo 'Patching mlat-client ...'
      if [ -n "$SNAPCRAFT_PROJECT_DIR" ]; then
        PATCHES_DIR="$SNAPCRAFT_PROJECT_DIR/patches"
      else
        PATCHES_DIR="../../../patches"
      fi
      patch -p1 < "$PATCHES_DIR/mlat-client.patch"
      echo 'Building mlat-client ...'
      snapcraftctl build
    organize:
      bin/fa-mlat-client: usr/lib/piaware/helpers/fa-mlat-client
    prime:
      - -usr/share/doc
      - -usr/share/man

  fr24feed:
    plugin: dump
    source:
      - on amd64: http://repo.feed.flightradar24.com/linux_x86_64_binaries/fr24feed_1.0.25-3_amd64.tgz
      - else:
        - on i386: http://repo.feed.flightradar24.com/linux_x86_binaries/fr24feed_1.0.25-3_i386.tgz
      - else:
        - on armhf: http://repo.feed.flightradar24.com/rpi_binaries/fr24feed_1.0.27-2_armhf.tgz
      - else:
        - on arm64: http://repo.feed.flightradar24.com/rpi_binaries/fr24feed_1.0.27-2_armhf.tgz
      - else fail
    build-packages:
      - wget
    organize:
      fr24feed: usr/bin/
      LICENSE.fr24feed: usr/share/fr24feed/
      version.txt: usr/share/fr24feed/

  opensky-feeder:
    plugin: dump
    build-packages:
      - wget
    source:
      - on amd64: https://opensky-network.org/files/firmware/opensky-feeder_latest_amd64.deb
      - else:
        - on i386: https://opensky-network.org/files/firmware/opensky-feeder_latest_i386.deb
      - else:
        - on armhf: https://opensky-network.org/files/firmware/opensky-feeder_latest_armhf.deb
      - else:
        - on arm64: https://opensky-network.org/files/firmware/opensky-feeder_latest_arm64.deb
      - else fail

  pfclient:
    plugin: dump
    build-packages:
      - wget
    source:
      - on amd64: http://client.planefinder.net/pfclient_5.0.162_amd64.deb
      - else:
        - on i386: http://client.planefinder.net/pfclient_5.0.161_i386.deb
      - else:
        - on armhf: http://client.planefinder.net/pfclient_5.0.161_armhf.deb
      - else:
        - on arm64: http://client.planefinder.net/pfclient_5.0.161_armhf.deb
      - else fail

  rtlsdr:
    plugin: nil
    stage-packages:
      - rtl-sdr

  collectd:
    plugin: nil
    stage-packages:
      - collectd
      - python3.8
      - libpython3.8
      - python3-urllib3
      - libasn1-8-heimdal
      - libbrotli1
      - libcurl3-gnutls
      - libgssapi3-heimdal
      - libhcrypto4-heimdal
      - libheimbase1-heimdal
      - libheimntlm0-heimdal
      - libhx509-5-heimdal
      - libkrb5-26-heimdal
      - libldap-2.4-2
      - libnghttp2-14
      - libperl5.30
      - libpsl5
      - libroken18-heimdal
      - librtmp1
      - libsasl2-2
      - libssh-4
      - libwind0-heimdal
    stage:
      - -etc/fonts/fonts.conf

  graphs1090:
    plugin: nil
    source: https://github.com/wiedehopf/graphs1090.git
    source-type: git
    stage-packages:
      - rrdtool
    override-build: |
      set -x
      # patch
      echo 'patching graphs1090 ...'
      if [ -n "$SNAPCRAFT_PROJECT_DIR" ]; then
        PATCHES_DIR="$SNAPCRAFT_PROJECT_DIR/patches"
      else
        PATCHES_DIR="../../../patches"
      fi
      patch -p1 < "$PATCHES_DIR/graphs1090.patch"
      # no build process is required
      # install
      pwd
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share/graphs1090
      cp -a * $SNAPCRAFT_PART_INSTALL/usr/share/graphs1090
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp service-graphs1090.sh $SNAPCRAFT_PART_INSTALL/bin/graphs1090
      mkdir -p $SNAPCRAFT_PART_INSTALL/etc/default
      cp default $SNAPCRAFT_PART_INSTALL/etc/default/graphs1090

    stage:
      - -etc/fonts/fonts.conf

  adsb-exchange:
    plugin: nil
    stage-packages:
      - socat

  rbfeeder:
    plugin: nil
    build-packages:
      - wget
    # rb24.com doesn't accept the default python client of snapcraft,
    # so, we need to pull the source by ourselves
    override-pull: |
      env | sort
      case $SNAPCRAFT_ARCH_TRIPLET in
        arm-*|aarch64-*)
          wget -O rbfeeder.deb https://apt.rb24.com/pool/main/r/rbfeeder/rbfeeder_0.2.21-20191004004313_armhf.deb
          ;;
        *)
          echo "Unsupported architecture: $SNAPCRAFT_ARCH_TRIPLET"
          ;;
      esac
    override-build: |
      env | sort
      case $SNAPCRAFT_ARCH_TRIPLET in
        arm-*|aarch64-*)
          dpkg -x $SNAPCRAFT_PART_SRC/rbfeeder.deb $SNAPCRAFT_PART_INSTALL
          # accessing files in /var/run is not allowed, so hack the path in the rbfeeder binary file.
          #sed -i 's/\/var\/run\/rbfeeder\.pid/\/var\/log\/rbfeeder\.pid/' $SNAPCRAFT_PART_INSTALL/usr/bin/rbfeeder
          ;;
        *)
          echo "Unsupported architecture: $SNAPCRAFT_ARCH_TRIPLET"
          ;;
      esac
    stage-packages:
      - to armhf: [libcurl3-gnutls, libglib2.0-0]
      - to arm64: [libcurl3-gnutls, libglib2.0-0]

  enable-foreign-arch:
    plugin: nil
    override-build: |
      set -x
      case $SNAPCRAFT_ARCH_TRIPLET in
        aarch64-*)
          sudo dpkg --add-architecture armhf
          sudo apt update
          ;;
      esac

  non-native-debs:
    plugin: nil
    after: [enable-foreign-arch]
    stage-packages:
      - to arm64:
        - libcurl3-gnutls:armhf
        - libglib2.0-0:armhf
        - librtlsdr0:armhf
        - libusb-1.0-0:armhf
        - libstdc++6:armhf
        - netbase

  snapcraft-preload:
    source: https://github.com/tsunghanliu/snapcraft-preload.git
    plugin: nil
    build-packages:
      - cmake
      - on amd64: [gcc-multilib, g++-multilib]
      - on arm64: [crossbuild-essential-armhf]
    override-build: |
      set -x
      case $SNAPCRAFT_ARCH_TRIPLET in
        aarch64-*)
          export CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++
          ;;
      esac
      export DESTDIR=${SNAPCRAFT_PART_INSTALL}
      export CMAKE_PREFIX_PATH=${SNAPCRAFT_STAGE}
      export CMAKE_INCLUDE_PATH="${SNAPCRAFT_STAGE}/include:${SNAPCRAFT_STAGE}/usr/include:${SNAPCRAFT_STAGE}/include/${SNAPCRAFT_ARCH_TRIPLET}:${SNAPCRAFT_STAGE}/usr/include/${SNAPCRAFT_ARCH_TRIPLET}
      export CMAKE_LIBRARY_PATH="${SNAPCRAFT_STAGE}/lib:${SNAPCRAFT_STAGE}/usr/lib:${SNAPCRAFT_STAGE}/lib/${SNAPCRAFT_ARCH_TRIPLET}:${SNAPCRAFT_STAGE}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
      cmake ${SNAPCRAFT_PART_SRC} -DCMAKE_INSTALL_PREFIX=
      cmake --build . -- -j$(nproc)
      cmake --build . --target install

  dump978:
    plugin: make
    source: https://github.com/flightaware/dump978.git
    source-type: git
    # the branch should be the same with piaware
    source-branch: v5.0
    override-build: |
      echo 'patching dump1090 ...'
      if [ -n "$SNAPCRAFT_PROJECT_DIR" ]; then
        PATCHES_DIR="$SNAPCRAFT_PROJECT_DIR/patches"
      else
        PATCHES_DIR="../../../patches"
      fi
      patch -p1 < "$PATCHES_DIR/dump978-fa.patch"
      cp "$PATCHES_DIR/dump1090/Taiwan.png" skyaware/flags-tiny/
      VERSION=$(head -n 1 debian/changelog | sed 's/.*(\(.*\)).*/\1/')
      sed -i "1i VERSION ?= $VERSION" Makefile
      echo 'building dump978 ...'
      #snapcraftctl build
      make -j$(nproc) dump978-fa faup978 skyaware978
      echo 'installing dump978 ...'
      cp -a dump978-fa faup978 skyaware978 skyaware debian/copyright $SNAPCRAFT_PART_INSTALL
    organize:
      dump978-fa: usr/bin/dump978-fa
      faup978: usr/lib/piaware/helpers/faup978
      skyaware978: usr/bin/skyaware978-fa
      skyaware: usr/share/dump978-fa/html
      copyright: usr/share/dump978-fa/copyright
    build-packages:
      - libboost-system-dev
      - libboost-program-options-dev
      - libboost-regex-dev
      - libboost-filesystem-dev
      - libsoapysdr-dev
    stage-packages:
      - libboost-filesystem1.71.0
      - libboost-program-options1.71.0
      - libboost-regex1.71.0
      - soapysdr-module-rtlsdr


layout:
  /etc/fr24feed.ini:
    bind-file: $SNAP_DATA/fr24feed/fr24feed.ini
  /var/lib/openskyd:
    bind: $SNAP_DATA/openskyd
