name: adsb-box
version: set-by-version-script
version-script: git describe --tags --always --dirty
summary: ADS-B tools
description: |
  This snap includes several ADS-B related tools to let users builds their
  own ADS-B receiver station. There are dump1090 and lighttpd in this snap.

grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict
base: core

apps:
  dump1090:
    command: bin/dump1090
    daemon: simple
    plugs: [network, network-bind, raw-usb, process-control, hardware-observe]
  lighttpd:
    command: bin/lighttpd
    daemon: simple
    plugs: [network, network-bind]
  piaware:
    command: bin/piaware
    daemon: simple
    plugs: [network, network-bind, system-observe, network-observe, mount-observe, hardware-observe]
    after: [dump1090]
  piaware-config:
    command: bin/piaware-config
  piaware-status:
    command: bin/piaware-status
    plugs: [network, system-observe, network-observe]
  fr24feed:
    command: bin/fr24feed
    daemon: simple
    plugs: [network, network-bind, network-observe]
    after: [dump1090]
  fr24feedcli:
    command: bin/fr24feedcli
    plugs: [network, network-bind, network-observe]
  fr24feed-status:
    command: bin/fr24feed-status
  openskyd:
    command: bin/openskyd
    daemon: simple
    plugs: [network, network-bind]
    after: [dump1090]
  pfclient:
    command: bin/pfclientd
    daemon: simple
    plugs: [network, network-bind]
    after: [dump1090]
  rtltest:
    command: usr/bin/rtl_test
    plugs: [network, network-bind, raw-usb, hardware-observe]
  collectd:
    command: bin/collectd
    daemon: simple
    plugs: [network, system-observe, network-observe, mount-observe, hardware-observe]
  graphs-gend:
    command: bin/graphs-gend
    daemon: simple
    plugs: [process-control]
    after: [dump1090, collectd, lighttpd]
  adsbexchange-netcat:
    command: bin/adsbexchange-netcat
    daemon: simple
    plugs: [network, network-bind, network-observe]
    after: [dump1090]
  adsbexchange-mlat:
    command: bin/adsbexchange-mlat
    daemon: simple
    plugs: [network, network-bind, network-observe]
    after: [dump1090]
  rbfeeder:
    command: bin/rbfeeder
    daemon: simple
    plugs: [network, network-bind, network-observe, hardware-observe]
  rbfeeder-mlat:
    command: bin/rbfeeder-mlat
    daemon: simple
    plugs: [network, network-bind, network-observe]
  rbfeedercli:
    command: bin/rbfeedercli

parts:
  common:
    plugin: dump
    source: .
    organize:
      www: var/www
    prime:
      - bin
      - etc
      - var
      - README.md

  customized-ppa:
    plugin: nil
    build-packages:
      - software-properties-common
    override-pull: |
      sudo add-apt-repository \
        --yes \
        ppa:robertliu/packages-for-ubuntu-core
      sudo apt update

  dump1090:
    plugin: make
    make-parameters: ['BLADERF=no', 'dump1090', 'faup1090']
    source: https://github.com/flightaware/dump1090.git
    source-type: git
    # the branch should be the same with piaware
    source-branch: v3.8.0
    override-build: |
      echo 'patching dump1090 ...'
      if [ -n "$SNAPCRAFT_PROJECT_DIR" ]; then
        PATCHES_DIR="$SNAPCRAFT_PROJECT_DIR/patches"
      else
        PATCHES_DIR="../../../patches"
      fi
      patch -p1 < "$PATCHES_DIR/dump1090.patch"
      cp "$PATCHES_DIR/dump1090/Taiwan.png" public_html/flags-tiny/
      sed -i '/RTLSDR ?= yes/ i DUMP1090_VERSION ?= \$\(shell git describe --always --tags --match=v\*\)' Makefile
      echo 'building dump1090 ...'
      snapcraftctl build
    artifacts:
      - dump1090
      - faup1090
      - public_html
      - COPYING
    organize:
      dump1090: usr/bin/dump1090-fa
      faup1090: usr/lib/piaware/helpers/faup1090
      public_html: usr/share/dump1090-fa/html
      COPYING: usr/share/dump1090-fa/COPYING
    build-packages:
      - pkg-config
      - libusb-1.0-0-dev
      - librtlsdr-dev
      - libncurses5-dev

  lighttpd:
    plugin: nil
    stage-packages:
      - lighttpd
    prime:
      - usr/sbin/lighttpd
      - usr/lib/libfam*
      - usr/lib/lighttpd
      - usr/share/doc/lighttpd/copyright

  tcllauncher:
    plugin: autotools
    source: https://github.com/flightaware/tcllauncher.git
    source-type: git
    override-build: |
      if [ -n "$SNAPCRAFT_PROJECT_DIR" ]; then
        PATCHES_DIR="$SNAPCRAFT_PROJECT_DIR/patches"
      else
        PATCHES_DIR="../../../patches"
      fi
      echo 'patching tcllauncher ...'
      patch -p1 < "$PATCHES_DIR/tcllauncher.patch"
      snapcraftctl build
    configflags: ['--with-tcl=/usr/lib/tcl8.6']
    build-packages:
      - tcl8.6-dev

  piaware:
    after: [tcllauncher]
    plugin: make
    source: https://github.com/flightaware/piaware.git
    source-type: git
    # the branch should be the same with dump1090-fa
    source-branch: v3.8.0
    override-build: |
      echo 'patching piaware ...'
      if [ -n "$SNAPCRAFT_PROJECT_DIR" ]; then
        PATCHES_DIR="$SNAPCRAFT_PROJECT_DIR/patches"
      else
        PATCHES_DIR="../../../patches"
      fi
      patch -p1 < "$PATCHES_DIR/piaware.patch"
      snapcraftctl build
      echo 'patching pkgIndex.tcl files ...'
      sed -i 's/\/usr/\$\:\:env\(SNAP\)\/usr/g' \
        $SNAPCRAFT_PART_INSTALL/usr/lib/tcltk/$SNAPCRAFT_ARCH_TRIPLET/itcl3.4/pkgIndex.tcl \
        $SNAPCRAFT_PART_INSTALL/usr/lib/tclx8.4/pkgIndex.tcl \
        $SNAPCRAFT_PART_INSTALL/usr/share/tcltk/tls1.6.7/pkgIndex.tcl \
        || \
        exit 1
    stage-packages:
      - tclx8.4
      - tcl8.6
      - tcllib
      - tcl-tls
      - itcl3
    prime:
      - -usr/share/doc
      - -usr/share/man

  mlat-client:
    plugin: python
    python-packages: [python-prctl]
    source: https://github.com/mutability/mlat-client.git
    source-type: git
    build-packages:
      - libcap-dev # for python-prctl
    override-build: |
      echo 'Patching mlat-client ...'
      if [ -n "$SNAPCRAFT_PROJECT_DIR" ]; then
        PATCHES_DIR="$SNAPCRAFT_PROJECT_DIR/patches"
      else
        PATCHES_DIR="../../../patches"
      fi
      patch -p1 < "$PATCHES_DIR/mlat-client.patch"
      echo 'Building mlat-client ...'
      snapcraftctl build
    organize:
      bin/fa-mlat-client: usr/lib/piaware/helpers/fa-mlat-client
    prime:
      - -usr/share/doc
      - -usr/share/man

  fr24feed:
    plugin: dump
    source:
      - on amd64: http://repo.feed.flightradar24.com/linux_x86_64_binaries/fr24feed_1.0.25-2_amd64.tgz
      - else:
        - on i386: http://repo.feed.flightradar24.com/linux_x86_binaries/fr24feed_1.0.25-1_i386.tgz
      - else:
        - on armhf: http://repo.feed.flightradar24.com/rpi_binaries/fr24feed_1.0.25-1_armhf.tgz
      - else:
        - on arm64: http://repo.feed.flightradar24.com/rpi_binaries/fr24feed_1.0.25-1_armhf.tgz
      - else fail
    build-packages:
      - wget
    organize:
      fr24feed: usr/bin/
      LICENSE.fr24feed: usr/share/fr24feed/
      version.txt: usr/share/fr24feed/

  opensky-feeder:
    plugin: dump
    build-packages:
      - wget
    source:
      - on amd64: https://opensky-network.org/files/firmware/opensky-feeder_latest_amd64.deb
      - else:
        - on i386: https://opensky-network.org/files/firmware/opensky-feeder_latest_i386.deb
      - else:
        - on armhf: https://opensky-network.org/files/firmware/opensky-feeder_latest_armhf.deb
      - else:
        - on arm64: https://opensky-network.org/files/firmware/opensky-feeder_latest_arm64.deb
      - else fail

  pfclient:
    plugin: dump
    build-packages:
      - wget
    source:
      - on amd64: http://client.planefinder.net/pfclient_4.1.1_i386.deb
      - else:
        - on i386: http://client.planefinder.net/pfclient_4.1.1_i386.deb
      - else:
        - on armhf: http://client.planefinder.net/pfclient_4.1.1_armhf.deb
      - else:
        - on arm64: http://client.planefinder.net/pfclient_4.1.1_armhf.deb
      - else fail

  rtlsdr:
    plugin: nil
    stage-packages:
      - rtl-sdr

  collectd:
    plugin: nil
    after: [customized-ppa]
    stage-packages:
      - collectd
      - python2.7
      - libpython2.7
    stage:
      - -etc/fonts/fonts.conf

  graphs-gend:
    plugin: nil
    source: https://github.com/jprochazka/adsb-receiver.git
    source-type: git
    stage-packages:
      - rrdtool
    override-build: |
      # patch
      echo 'patching adsb-receiver scripts ...'
      if [ -n "$SNAPCRAFT_PROJECT_DIR" ]; then
        PATCHES_DIR="$SNAPCRAFT_PROJECT_DIR/patches"
      else
        PATCHES_DIR="../../../patches"
      fi
      patch -p1 < "$PATCHES_DIR/graphs-gend.patch"
      # no build process is required
      # install
      pwd
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share/adsb-receiver
      cp -a build/portal/graphs $SNAPCRAFT_PART_INSTALL/usr/share/adsb-receiver
    stage:
      - -etc/fonts/fonts.conf

  adsb-exchange:
    plugin: nil
    stage-packages:
      - socat

  rbfeeder:
    plugin: nil
    build-packages:
      - wget
    # rb24.com doesn't accept the default python client of snapcraft,
    # so, we need to pull the source by ourselves
    override-pull: |
      env | sort
      case $SNAPCRAFT_ARCH_TRIPLET in
        arm-*|aarch64-*)
          wget -O rbfeeder.deb https://apt.rb24.com/pool/main/r/rbfeeder/rbfeeder_0.2.21-20191004004313_armhf.deb
          ;;
        *)
          echo "Unsupported architecture: $SNAPCRAFT_ARCH_TRIPLET"
          ;;
      esac
    override-build: |
      env | sort
      case $SNAPCRAFT_ARCH_TRIPLET in
        arm-*|aarch64-*)
          dpkg -x $SNAPCRAFT_PART_SRC/rbfeeder.deb $SNAPCRAFT_PART_INSTALL
          # accessing files in /var/run is not allowed, so hack the path in the rbfeeder binary file.
          #sed -i 's/\/var\/run\/rbfeeder\.pid/\/var\/log\/rbfeeder\.pid/' $SNAPCRAFT_PART_INSTALL/usr/bin/rbfeeder
          ;;
        *)
          echo "Unsupported architecture: $SNAPCRAFT_ARCH_TRIPLET"
          ;;
      esac
    stage-packages:
      - to armhf: [libcurl3-gnutls, libglib2.0-0]
      - to arm64: [libcurl3-gnutls, libglib2.0-0]

  enable-foreign-arch:
    plugin: nil
    override-build: |
      set -x
      case $SNAPCRAFT_ARCH_TRIPLET in
        aarch64-*)
          sudo dpkg --add-architecture armhf
          sudo apt update
          ;;
      esac

  non-native-debs:
    plugin: nil
    after: [enable-foreign-arch]
    stage-packages:
      - to arm64:
        - libcurl3-gnutls:armhf
        - libglib2.0-0:armhf
        - librtlsdr0:armhf
        - libusb-1.0-0:armhf
        - libstdc++6:armhf
        - netbase

  snapcraft-preload:
    source: https://github.com/tsunghanliu/snapcraft-preload.git
    plugin: nil
    build-packages:
      - cmake
      - on amd64: [gcc-multilib, g++-multilib]
      - on arm64: [crossbuild-essential-armhf]
    override-build: |
      set -x
      case $SNAPCRAFT_ARCH_TRIPLET in
        aarch64-*)
          export CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++
          ;;
      esac
      export DESTDIR=${SNAPCRAFT_PART_INSTALL}
      export CMAKE_PREFIX_PATH=${SNAPCRAFT_STAGE}
      export CMAKE_INCLUDE_PATH="${SNAPCRAFT_STAGE}/include:${SNAPCRAFT_STAGE}/usr/include:${SNAPCRAFT_STAGE}/include/${SNAPCRAFT_ARCH_TRIPLET}:${SNAPCRAFT_STAGE}/usr/include/${SNAPCRAFT_ARCH_TRIPLET}
      export CMAKE_LIBRARY_PATH="${SNAPCRAFT_STAGE}/lib:${SNAPCRAFT_STAGE}/usr/lib:${SNAPCRAFT_STAGE}/lib/${SNAPCRAFT_ARCH_TRIPLET}:${SNAPCRAFT_STAGE}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
      cmake ${SNAPCRAFT_PART_SRC} -DCMAKE_INSTALL_PREFIX=
      cmake --build . -- -j$(nproc)
      cmake --build . --target install


layout:
  /etc/fr24feed.ini:
    bind-file: $SNAP_DATA/fr24feed/fr24feed.ini
  /var/lib/openskyd:
    bind: $SNAP_DATA/openskyd
