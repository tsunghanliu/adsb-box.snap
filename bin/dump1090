#!/bin/bash
set -e
#set -x

BIN="$SNAP/usr/bin/dump1090-fa"
ARGS=()
CONF="$SNAP_DATA/dump1090-fa.conf"

BIAST_BIN="$SNAP/bin/rtl_biast"

# migration for config file
if [ -f "$SNAP_DATA/dump1090-mutability.conf" ]; then
	if [ -f "$CONF" ]; then
		mv "$SNAP_DATA/dump1090-mutability.conf" "$SNAP_DATA/dump1090-mutability.conf.bak"
	else
		mv "$SNAP_DATA/dump1090-mutability.conf" "$CONF"
	fi
fi

if [ ! -f "$CONF" ]; then
	cp "$SNAP/etc/dump1090-fa/config-template" "$CONF"
fi

# Read configuration variable file if it is present
# shellcheck source=/dev/null
[ -r "$CONF" ] && . "$CONF"

# overwrite $JSON_DIR defined in $CONF
JSON_DIR="/tmp/dump1090-fa"

# get location from snap settings
[ -z "$LAT" ] && LAT="$(snapctl get receiver.latitude)"
[ -z "$LON" ] && LON="$(snapctl get receiver.longitude)"
[ -z "$JSON_LOCATION_ACCURACY" ] && JSON_LOCATION_ACCURACY="$(snapctl get dump1090.location-accuracy)"

# work out daemon args

# sanitize missing settings
#[ -z "$START_DUMP1090" ] && START_DUMP1090=no
#[ -z "$DUMP1090_USER" ] && DUMP1090_USER="missing-DUMP1090_USER-setting-in-config"
[ -z "$RAW_INPUT_PORT" ] && RAW_INPUT_PORT=0
[ -z "$RAW_OUTPUT_PORT" ] && RAW_OUTPUT_PORT=0
[ -z "$SBS_OUTPUT_PORT" ] && SBS_OUTPUT_PORT=0
[ -z "$BEAST_INPUT_PORT" ] && BEAST_INPUT_PORT=0
[ -z "$BEAST_OUTPUT_PORT" ] && BEAST_OUTPUT_PORT=0
[ -z "$NET_BUFFER" ] && NET_BUFFER=0
[ -z "$JSON_INTERVAL" ] && JSON_INTERVAL=3
[ -z "$MAX_RANGE" ] && MAX_RANGE=300
[ -z "$NICE_LEVEL" ] && NICE_LEVEL=-5
[ -z "$STATS_INTERVAL" ] && STATS_INTERVAL=3600

# receiver:
case "x$DEVICE" in
	x|x0) ARGS+=("--net") ;;
	xnone) ARGS+=("--net-only") ; NICE_LEVEL="" ;;
	*) ARGS+=("--net" "--device-index" "$DEVICE") ;;
esac
case "x$GAIN" in
	x|xmax) ;;
	xagc) ARGS+=("--gain" "-10") ;;
	*) ARGS+=("--gain" "$GAIN") ;;
esac
if [ -n "$PPM" ]; then ARGS+=("--ppm" "$PPM"); fi

# decoder:
if [ "x$FIX_CRC" = "xyes" ]; then ARGS+=("--fix"); fi
if [ -n "$LAT" ]; then ARGS+=("--lat" "$LAT"); fi
if [ -n "$LON" ]; then ARGS+=("--lon" "$LON"); fi
ARGS+=("--max-range" "$MAX_RANGE")

# net:

ARGS+=(\
"--net-ri-port" "$RAW_INPUT_PORT" "--net-ro-port" "$RAW_OUTPUT_PORT" \
"--net-bi-port" "$BEAST_INPUT_PORT" "--net-bo-port" "$BEAST_OUTPUT_PORT" \
"--net-sbs-port" "$SBS_OUTPUT_PORT")
if [ -n "$NET_HEARTBEAT" ]; then ARGS+=("--net-heartbeat" "$NET_HEARTBEAT"); fi
if [ -n "$NET_OUTPUT_SIZE" ]; then ARGS+=("--net-ro-size" "$NET_OUTPUT_SIZE"); fi
if [ -n "$NET_OUTPUT_INTERVAL" ]; then ARGS+=("--net-ro-interval" "$NET_OUTPUT_INTERVAL"); fi
if [ "$NET_BUFFER" -le "65536" ]; then ARGS+=("--net-buffer" "0")
elif [ "$NET_BUFFER" -le "131072" ]; then ARGS+=("--net-buffer" "1")
elif [ "$NET_BUFFER" -le "262144" ]; then ARGS+=("--net-buffer" "2")
else ARGS+=("--net-buffer" "3"); fi
if [ -n "$NET_BIND_ADDRESS" ]; then ARGS+=("--net-bind-address" "$NET_BIND_ADDRESS"); fi

# misc:
if [ -n "$STATS_INTERVAL" ]; then ARGS+=("--stats-every" "$STATS_INTERVAL"); fi
if [ -n "$JSON_DIR" ]; then ARGS+=("--write-json" "$JSON_DIR"); fi
if [ -n "$JSON_INTERVAL" ]; then ARGS+=("--write-json-every" "$JSON_INTERVAL"); fi
case "x$JSON_LOCATION_ACCURACY" in
	xexact) ARGS+=("--json-location-accuracy" "2") ;;
	xapproximate) ARGS+=("--json-location-accuracy" "1") ;;
	*) ARGS+=("--json-location-accuracy" "0") ;;
esac

if [ "x$LOG_DECODED_MESSAGES" != "xyes" ]; then ARGS+=("--quiet"); fi

if [ -n "$EXTRA_ARGS" ]; then
	for a in $EXTRA_ARGS; do
		ARGS+=("$a");
	done
fi

mkdir -p $JSON_DIR

# Enable Bias-T for RTL-SDR v3
[ -z "$BIAST" ] && BIAST="$(snapctl get biast)"
[ "$BIAST" = "1" ] && $BIAST_BIN -b 1

if [ -n "$NICE_LEVEL" ]; then
	nice -n $NICE_LEVEL "$BIN" "${ARGS[@]}"
else
	$BIN "${ARGS[@]}"
fi

