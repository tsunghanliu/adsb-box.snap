diff --git a/package/fa_piaware_config.tcl b/package/fa_piaware_config.tcl
index a0580b6..68b278b 100644
--- a/package/fa_piaware_config.tcl
+++ b/package/fa_piaware_config.tcl
@@ -543,7 +543,9 @@ namespace eval ::fa_piaware_config {
 				set f [open $temppath "w" [expr {$fpstat(mode) & 0777}]]
 
 				# fix the ownership to match the old file
-				chown -fileid [list $fpstat(uid) $fpstat(gid)] $f
+				if {![info exists ::env(SNAP_DATA)]} {
+					chown -fileid [list $fpstat(uid) $fpstat(gid)] $f
+				}
 			}
 
 			# write the new data
@@ -1080,21 +1082,31 @@ namespace eval ::fa_piaware_config {
 	# Return a new ConfigGroup that handles the standard piaware config location, which are
 	# (starting from the highest priority):
 	#
+	#  priority 100+:     $::env(SNAP_DATA)/piaware/piaware.conf (readwrite)
 	#  priority 100+:     any extra config file given as an argument (readonly)
 	#  priority 100+:     any config files found in /media/usb/*/piaware-config.txt, ordered arbitrarily (readonly)
 	#  priority 50:       /boot/piaware-config.txt (readwrite)
 	#  priority 50:       /boot/firmware/piaware-config.txt (readwrite)
 	#  priority 40:       /etc/piaware.conf (readwrite)
+	#  priority 40:       $::env(SNAP)/etc/piaware.conf (readonly)
 	#  priority 30:       /usr/share/piaware-support/piaware-image-config.txt (readonly) (provides additional defaults on PiAware sdcard images)
 	#
 	# which means that in general changes will be written to /etc/piaware.conf where possible, or
 	# in piaware-config.txt if the setting was set there.
 	#
+	# for snappied version, $::env(SNAP)/etc/piaware.conf is for default values and
+	# $::env(SNAP_DATA)/piaware/piaware.conf is the major one for customizations.
+	#
 	# Provide a itcl name pattern (e.g. #auto) as "name"
 	proc piaware_combined_config {name {extraConfigFile ""}} {
 		set metadata [piaware_standard_settings #auto]
 		set combined [uplevel 1 ::fa_piaware_config::new ::fa_piaware_config::ConfigGroup $name -metadata $metadata]
 
+		if {[info exists ::env(SNAP)]} {
+			$combined add [new ConfigFile #auto -filename "$::env(SNAP)/etc/piaware.conf" -metadata $metadata -priority 40 -readonly 1]
+			$combined add [new ConfigFile #auto -filename "$::env(SNAP_DATA)/piaware/piaware.conf" -metadata $metadata -priority 100 -writeHelper $::fa_piaware_config::helperPath]
+		}
+
 		$combined add [new ConfigFile #auto -filename "/usr/share/piaware-support/piaware-image-config.txt" -metadata $metadata -priority 30 -readonly 1]
 
 		if {$extraConfigFile ne ""} {
diff --git a/package/fa_sudo.tcl b/package/fa_sudo.tcl
index 60f748e..086f9e1 100644
--- a/package/fa_sudo.tcl
+++ b/package/fa_sudo.tcl
@@ -42,6 +42,11 @@ namespace eval ::fa_sudo {
 	}
 
 	proc _make_droproot_args {user argv0 args} {
+		# do not droproot when snapped
+		if {[info exists ::env(SNAP)]} {
+			return [list {*}$args]
+		}
+
 		# try a few different things to drop root
 		set path [auto_execok $::fa_sudo::dropRootHelper]
 		if {$path ne ""} {
diff --git a/package/fa_sysinfo.tcl b/package/fa_sysinfo.tcl
index 8cb06bf..cd4f60b 100644
--- a/package/fa_sysinfo.tcl
+++ b/package/fa_sysinfo.tcl
@@ -6,7 +6,13 @@ namespace eval ::fa_sysinfo {
 	# filesystem_usage - return a list of mountpoint / percentage-used pairs
 	proc filesystem_usage {} {
 		set result [list]
-		set fp [::fa_sudo::open_as "|/bin/df --output=target,pcent"]
+
+		if {[info exists ::env(SNAP_DATA)]} {
+			set fp [::fa_sudo::open_as "|$::env(SNAP)/bin/df-snappy --output=target,pcent"]
+		} else {
+			set fp [::fa_sudo::open_as "|/bin/df --output=target,pcent"]
+		}
+
 		try {
 			gets $fp ;# skip header line
 			while {[gets $fp line] >= 0} {
diff --git a/package/piaware.tcl b/package/piaware.tcl
index 1e1f340..0f9acd5 100644
--- a/package/piaware.tcl
+++ b/package/piaware.tcl
@@ -11,7 +11,11 @@ package require Itcl
 package require tryfinallyshim
 package require fa_sudo
 
-set piawarePidFile /var/run/piaware.pid
+if {[info exists ::env(SNAP_DATA)]} {
+	set piawarePidFile $::env(SNAP_DATA)/piaware/piaware.pid
+} else {
+	set piawarePidFile /var/run/piaware.pid
+}
 set piawareConfigFile /etc/piaware
 
 #
diff --git a/programs/piaware-config/main.tcl b/programs/piaware-config/main.tcl
index 3d302a3..3743597 100644
--- a/programs/piaware-config/main.tcl
+++ b/programs/piaware-config/main.tcl
@@ -19,7 +19,11 @@ source $::launchdir/helpers.tcl
 package require cmdline
 package require Tclx
 
-set pidFile "/var/run/piaware.pid"
+if {[info exists ::env(SNAP_DATA)]} {
+	set pidFile "$::env(SNAP_DATA)/piaware/piaware.pid"
+} else {
+	set pidFile "/var/run/piaware.pid"
+}
 
 #
 # main - the main program
diff --git a/programs/piaware-status/helpers.tcl b/programs/piaware-status/helpers.tcl
index a945b54..cec17b8 100644
--- a/programs/piaware-status/helpers.tcl
+++ b/programs/piaware-status/helpers.tcl
@@ -189,7 +189,11 @@ proc report_feeder_id {} {
 		return
 	}
 
-	set path "/var/cache/piaware/feeder_id"
+	if {[info exists ::env(SNAP_DATA)]} {
+		set path "$::env(SNAP_DATA)/piaware/feeder_id"
+	} else {
+		set path "/var/cache/piaware/feeder_id"
+	}
 	set id ""
 	catch {
 		set f [open $path "r"]
diff --git a/programs/piaware/faup1090.tcl b/programs/piaware/faup1090.tcl
index 9c80bb9..8c9275d 100644
--- a/programs/piaware/faup1090.tcl
+++ b/programs/piaware/faup1090.tcl
@@ -63,7 +63,11 @@ proc connect_adsb_via_faup1090 {} {
 	}
 
 	# path to faup1090
-	set path [auto_execok "/usr/lib/piaware/helpers/faup1090"]
+	if {[info exists ::env(SNAP)]} {
+		set path [auto_execok "$::env(SNAP)/usr/lib/piaware/helpers/faup1090"]
+	} else {
+		set path [auto_execok "/usr/lib/piaware/helpers/faup1090"]
+	}
 	if {$path eq ""} {
 		logger "No faup1090 found at $path, 1090ES support disabled"
 		return
diff --git a/programs/piaware/faup978.tcl b/programs/piaware/faup978.tcl
index fa2f933..d7e6799 100644
--- a/programs/piaware/faup978.tcl
+++ b/programs/piaware/faup978.tcl
@@ -34,7 +34,11 @@ proc connect_uat_via_faup978 {} {
 	}
 
 	# path to faup978
-	set path [auto_execok "/usr/lib/piaware/helpers/faup978"]
+	if {[info exists ::env(SNAP)]} {
+		set path [auto_execok "$::env(SNAP)/usr/lib/piaware/helpers/faup978"]
+	} else {
+		set path [auto_execok "/usr/lib/piaware/helpers/faup978"]
+	}
 	if {$path eq ""} {
 		logger "No faup978 found at $path, UAT support disabled"
 		return
diff --git a/programs/piaware/mlat.tcl b/programs/piaware/mlat.tcl
index 11c1db4..7ad17e6 100644
--- a/programs/piaware/mlat.tcl
+++ b/programs/piaware/mlat.tcl
@@ -15,7 +15,11 @@ set ::mlatRestartMillis 60000
 # UDP transport info
 set ::mlatUdpTransport {}
 # path to fa-mlat-client
-set ::mlatClientPath [auto_execok "/usr/lib/piaware/helpers/fa-mlat-client"]
+if {[info exists ::env(SNAP)]} {
+	set ::mlatClientPath [auto_execok "$::env(SNAP)/usr/lib/piaware/helpers/fa-mlat-client"]
+} else {
+	set ::mlatClientPath [auto_execok "/usr/lib/piaware/helpers/fa-mlat-client"]
+}
 # current mlat status for the statusfile, one of:
 #   not_enabled
 #   not_running
