#!/bin/bash
set -e

ENABLE_LOG=$(snapctl get dump978.enable-log)
ENABLE_LOG=${ENABLE_LOG:-0}
if [ "$ENABLE_LOG" != "0" ]; then
	set -x
fi

# get index/serial of receiver
dev_index=$(snapctl get receiver.dump978.index)
dev_serial=$(snapctl get receiver.dump978.serial)

if [ -z "$dev_index" ] && [ -z "$dev_serial" ]; then
	echo "set index or serial of receiver to enable $(basename "$0") service"
	exit 0
fi

# wait until all required interfaces are connected
PLUGS="network-observe raw-usb"
while true; do
	WAIT=0
	for plug in $PLUGS; do
		snapctl is-connected "$plug" || WAIT=1
		if [ "$WAIT" -eq 1 ]; then
			sleep 10
			break
		fi
	done
	if [ "$WAIT" -eq 0 ]; then
		break
	fi
done

# get bias-tee config (gpio number for bias-tee)
dev_enable_biast=$(snapctl get receiver.dump978.enable-biast)
if [ -n "$dev_enable_biast" ] && [ "$dev_enable_biast" = "1" ]; then
	biast_args=("-b" "1")

	dev_biast_gpio=$(snapctl get receiver.dump978.biast-gpio)
	if [ -n "$dev_biast_gpio" ]; then
		biast_args+=("-g" "$dev_biast_gpio")
	fi

	if [ -n "$dev_index" ]; then
		biast_args+=("-d" "$dev_index")
	elif [ -n "$dev_serial" ]; then
		biast_args+=("-d" "$dev_serial")
	fi

	# allow errors?!
	"$RTL_BIAST" "${biast_args[@]}" || true
fi

case $SNAP_ARCH in
	amd64)
		ARCH_TRIPLET="x86_64-linux-gnu"
		;;
	armhf)
		ARCH_TRIPLET="arm-linux-gnueabihf"
		;;
	arm64)
		ARCH_TRIPLET="aarch64-linux-gnu"
		;;
	*)
		ARCH_TRIPLET="$SNAP_ARCH-linux-gnu"
		;;
esac

BIN="$SNAP/usr/bin/dump978-fa"
NICE_LEVEL=-5
ARGS=()

# receiver options
if [ -n "$dev_index" ]; then
	ARGS+=("--sdr" "driver=rtlsdr,rtl=$dev_index")
else
	ARGS+=("--sdr" "driver=rtlsdr,serial=$dev_serial")
fi
ARGS+=("--format" "CS8")

# decoder_options
# N/A

# net options
ARGS+=("--raw-port" "localhost:30978")
ARGS+=("--json-port" "localhost:30979")

export SOAPY_SDR_PLUGIN_PATH=$SNAP/usr/lib/$ARCH_TRIPLET/SoapySDR/modules0.7

nice -n $NICE_LEVEL "$BIN" "${ARGS[@]}"

